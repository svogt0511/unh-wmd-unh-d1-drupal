<?php
/**
 * @file
 *
 * @todo: Update this docblock.
 *
 * This is the main module file.
 *
 * This module implements some common Drupal constructs for unh_d1_client.
 *
 *
 */

/******************************************************************************
 * Get 'helper' functions and constants.
 ******************************************************************************/
require_once drupal_get_path('module', 'unh_d1_drupal') . '/includes/unh_d1_drupal.ajax.inc';
require_once drupal_get_path('module', 'unh_d1_drupal') . '/includes/unh_d1_drupal.constants.inc';
require_once drupal_get_path('module', 'unh_d1_drupal') . '/includes/unh_d1_drupal.course_node.inc';
require_once drupal_get_path('module', 'unh_d1_drupal') . '/includes/unh_d1_drupal.settings.inc';
require_once drupal_get_path('module', 'unh_d1_drupal') . '/includes/unh_d1_drupal.sort.inc';
require_once drupal_get_path('module', 'unh_d1_drupal') . '/includes/unh_d1_drupal.utils.inc';

    
// Allows us to pass variables from php to javascript.  We need this in order to make
// calls to the d1 api from javascript (for ajax mapping of course title to course code.
$settings = array(
  'd1ClientWebserviceURL' => unh_d1_client_webservice_path(),
  'd1ClientDomainFE' => unh_d1_client_settings_fe_domain(),
  'd1ClientDomainBE' => unh_d1_client_settings_be_domain(),
  'd1ClientDomainPublic' => unh_d1_client_settings_public_domain()
);
drupal_add_js(array('unh_d1_drupal' => $settings), array('type' => 'setting'));
// drupal_add_js(drupal_get_path('module', 'unh_d1_drupal') . '/js/unh_d1_drupal.js');

/*
function unh_d1_drupal_preprocess_node(&$vars) {
  // Add JS & CSS by node type
  $testvar = 'MAKING MY AJAX CALL!!';
  ddl('got here!');
    ddl($vars, '$vars - pre got here!!');
  if( $vars['type'] == 'course') {

    drupal_add_js(array('unh_d1_drupal' => array('testvar' => $testvar)), array('type' => 'setting'));
    drupal_add_js(drupal_get_path('module', 'unh_d1_drupal') . '/js/unh_d1_drupal.course.js');
  }
}
*/

/**
 * Implements hook_menu().
 */
function unh_d1_drupal_menu() {
  $items = array();
  
  $items['title/autocomplete'] = array(
    'page callback' => '_unh_d1_drupal_title_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );

  // Admin main page for d1 config.
  $items['admin/config/unh-d1'] = array(
    'title' => 'UNH DestinyOne',
    'description' => 'UNH settings for DestinyOne web services.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  // Admin config page for d1_drupal module.
  $items['admin/config/unh-d1/unh-d1-drupal-settings'] = array(
    'title' => 'UNH D1: Drupal Settings',
    'description' => 'Configuration UNH DestinyOne Drupal module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unh_d1_drupal_settings_form'),
    'access arguments' => array('administer unh_d1_drupal'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  // Add callback for non-cached loading of status (ajax).
  $items['unh_d1_drupal/ajax/get_section_status/%/%'] = array(
  //$items['unh_d1_drupal/ajax/get_section_status'] = array(
    'page callback' => 'unh_d1_drupal_ajax_get_section_status', // Render HTML.
    'page arguments' => array(3, 4),
    //page arguments' => array('abc'),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
    'delivery callback' => 'unh_d1_drupal_ajax_get_section_status_callback',  // Magic goes here.
  );

  return $items;
}

/**
* Implements hook_permission().
*/
function unh_d1_drupal_permission() {
  return array(
    'administer unh_d1_drupal' => array(
      'title' => t('Administer UNH D1 Drupal Settings'),
      'description' => t('Configure UNH Drupal module settings for this site.'),
    ),
  );
}

/**
* Implements hook_form_alter() for the course node edit form.
*
* Adds autocomplete to the 'course code' field.
*
* @todo: 
*   - Deletes access to the 'location' field??? 
*   - finish bringing in form_alter code from d1pdt, training.
*/   
function unh_d1_drupal_form_course_node_form_alter(&$form, &$form_state, $form_id) {

  // Autocomplete for course content type (course title)
  $form['title']['#attached'] = array(
    'library' => array(
      array('system', 'ui.autocomplete'),
    ),
    'js' => array(
      drupal_get_path('module','unh_d1_drupal') . '/js/unh_d1_drupal.course_node.js',
    ),
  );

  $form['title']['#autocomplete_path'] = 'title/autocomplete';
  $form['field_course_code']['und'][0]['value']['#attributes']['readonly'] = 'readonly';

  // @todo: if you ever delete the location field, get rid of this line.
  $form['field_location']['#access'] = FALSE;
  
}


/******************************************************************************
 * Form constructor for the UNH D1 Drupal admin settings form.
******************************************************************************/
function unh_d1_drupal_settings_form($form, &$form_state) {

  $programAreas = unh_d1_client_getprogramAreas();

  $options_array = array();
  foreach($programAreas as $programArea) {
    # the values for the dropdown box
    $options_array[$programArea['code']] = $programArea['name'];
  }


  $form['unh_d1_drupal_program_area'] = array(
      '#title' => t('Program Area'),
      '#type' => 'select',
      '#description' => "Select the applicable program area.  Used to limit our set of resources to our particular program.",
      //'#options' => $form['unh_d1_drupal_program_area_options']['#value'],
      '#options' => $options_array,
      '#default_value' => variable_get('unh_d1_drupal_program_area', ''),
      '#required' => TRUE,
  );

  if (_unh_d1_drupal_google_analytics_is_enabled() && _d1_drupal_add_to_head_is_enabled()) {
    $title = 'Google Track Enrollments (' . variable_get('googleanalytics_account') . ')';
    $disabled = FALSE;
    $additional_desc = UNH_D1_DRUPAL_GOOGLE_ET_DESC_ADDL;
  } else {
    $title = UNH_D1_DRUPAL_GOOGLE_ET_TITLE;
    $disabled = TRUE;
    $additional_desc = UNH_D1_DRUPAL_GOOGLE_ET_DESC_ADDL;
  }

  $form['unh_d1_drupal_google_track_enrollments'] = array(
    '#type' =>'checkbox',
    '#title' => t($title),
    '#default_value' => variable_get('unh_d1_drupal_google_track_enrollments', 0),
    '#description' => t($additional_desc . UNH_D1_DRUPAL_GOOGLE_ET_DESC),
    '#disabled' => $disabled,
  );

  $form = system_settings_form($form);
  $form['#submit'][] = 'unh_d1_drupal_settings_form_custom_submit';
  
  return $form;
}

/**
 * Form validation for the UNH D1 Drupal admin settings form.
 */
function unh_d1_drupal_settings_form_validate($form, &$form_state){

}

/**
 * Form custom submit for the UNH D1 Drupal admin settings form.
 */
function unh_d1_drupal_settings_form_custom_submit($form, &$form_state){

  // Does this even work? (drupal_flush_all_caches)
  drupal_flush_all_caches();
  drupal_set_message('All caches have been cleared.', 'status', FALSE);
}

/******************************************************************************
 *
 * Definitions for various content panes (ctools plugins, theme hooks, etc.).
 *
 ******************************************************************************/

/**
 * Implements hook_ctools_plugin_directory().
 */
function unh_d1_drupal_ctools_plugin_directory($module, $plugin) {
  if (($module == 'ctools' || $module == 'panels') && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_theme().
 */
function unh_d1_drupal_theme() {
  $module_path = drupal_get_path('module', 'unh_d1_drupal');
  $base = array(
    'path' => "{$module_path}/theme",
  );

  $ret = array(
    'unh_d1_drupal__course_sections_pane' => $base + array(
      'template' => 'unh-d1-drupal--course-sections-pane',
      'variables' => array(
        'course_nid' => '0',
        'course' => NULL,
        'sections' => array(),
        'config' => array(),
      ),
    ),
    'unh_d1_drupal__course_section' => $base + array(
      'template' => 'unh-d1-drupal--course-section',
      'variables' => array(
        'course_nid' => 0,
        'course' => NULL,
        'section' => NULL,
        'config' => array(),
        'disp_idx' => 0,
        'disp_open' => FALSE,
      ),
    ),
    'unh_d1_drupal__course_overview_pane' => $base + array(
      'template' => 'unh-d1-drupal--course-overview-pane',
      'variables' => array(
        'course_nid' => '0',
        'course' => NULL,
        'config' => array(),
      ),
    ),
  );

  return $ret;
}

/**
 * Implements hook_theme_registry_alter(). Brings in all of our module theme templates.
 */
function unh_d1_drupal_theme_registry_alter(&$theme_registry) {
  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'unh_d1_drupal');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}

/*
function unh_d1_drupal_preprocess_panels_pane(&$vars) {
  // ddl($vars, '$vars - preprocess panels pane.');

}
*/

/**
 * Implements hook_preprocess() for course sections pane.
 *
 * Sets up variables for the course sections pane template.  
 * Makes sure that we are on a course page.
 *
 * Available variables:
 *
 *  $course_nid = '0',                      // from page context
 *  $course = NULL,                         // from API (course node => course code)
 *  $sections = array(),                    // from API (course)
 *  $config = array()          // from pane settings
 *
 * $course_nid and $body_section_fields already rendered from panel settings.
 */
function unh_d1_drupal_preprocess_unh_d1_drupal__course_sections_pane(&$vars) { 
  // ddl("YYYY - GOT HERE PREPROCESS COURSE SECTIONS PANE! START!");
  // ddl($vars, '$vars - preprocess a section block');
  // ddl("YYYY - GOT HERE PREPROCESS COURSE SECTIONS PANE! END!");
}

/**
 * Implements hook_preprocess() for course sections pane.
 *
 * Sets up variables for the course sections pane template.  
 * Makes sure that we are on a course page.
 *
 * Available variables:
 *
 *  $course_nid = '0',                      // from page context
 *  $course = NULL,                         // from API (course node => course code)
 *  $sections = array(),                    // from API (course)
 *  $config = array()          // from pane settings
 *
 * $course_nid and $body_section_fields already rendered from panel settings.
 */
function unh_d1_drupal_preprocess_unh_d1_drupal__course_section(&$vars) {
  // ddl("ZZZZ - GOT HERE PREPROCESS A SECTION BLOCK! START!");
  // ddl($vars, '$vars - preprocess a section block');
  // ddl("ZZZZ - GOT HERE PREPROCESS A SECTION BLOCK! END!");
}


/**
 * Implements hook_preprocess() for course overview pane.
 *
 * Sets up variables for the course overview pane template.  
 * Makes sure that we are on a course page.
 *
 * Available variables:
 *
 *  $course_nid = '0',                      // from page context
 *  $course = NULL,                         // from API (course node => course code)
 *  $sections = array(),                    // from API (course)
 *  $config = array()          // from pane settings
 *
 * $course_nid and $body_section_fields already rendered from panel settings.
 */
function unh_d1_drupal_preprocess_unh_d1_drupal__course_overview_pane(&$vars) { 
  // ddl("YYYY - GOT HERE PREPROCESS COURSE OVERVIEW PANE! START!");
  // ddl($vars, '$vars - preprocess a section block');
  // ddl("YYYY - GOT HERE PREPROCESS COURSE OVERVIEW PANE! END!");
}
